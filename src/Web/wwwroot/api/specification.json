{
  "x-generator": "NSwag v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "BuyDozerBeMain API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/HeavyUnits/GetHeavyUnit": {
      "get": {
        "tags": [
          "HeavyUnits"
        ],
        "operationId": "GetAllHeavyUnit",
        "parameters": [
          {
            "name": "ParameterUnit",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "PriceBuy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfHeavyUnitDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/HeavyUnits/CreateHeavyUnit": {
      "post": {
        "tags": [
          "HeavyUnits"
        ],
        "operationId": "CreateHeavyUnit",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHeavyUnitCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/HeavyUnits/UpdateHeavyUnit/{id}": {
      "put": {
        "tags": [
          "HeavyUnits"
        ],
        "operationId": "UpdateHeavyUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHeavyUnitCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/HeavyUnits/DeleteHeavyUnit/{id}": {
      "delete": {
        "tags": [
          "HeavyUnits"
        ],
        "operationId": "DeleteHeavyUnit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/LoginRegisters/Register": {
      "post": {
        "tags": [
          "LoginRegisters"
        ],
        "operationId": "RegisterUserEntity",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserEntityCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/LoginRegisters/Login": {
      "post": {
        "tags": [
          "LoginRegisters"
        ],
        "operationId": "LoginUserEntity",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserEntityCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/PriceListRents/GetPriceListRent": {
      "get": {
        "tags": [
          "PriceListRents"
        ],
        "operationId": "GetAllPriceListRent",
        "parameters": [
          {
            "name": "ParameterNameRent",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SortPrice",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfPriceListRentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/PriceListRents/CreatePriceListRent": {
      "post": {
        "tags": [
          "PriceListRents"
        ],
        "operationId": "CreatePriceListRent",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePriceListRentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/PriceListRents/UpdatePriceListRent/{id}": {
      "put": {
        "tags": [
          "PriceListRents"
        ],
        "operationId": "UpdatePriceListRent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePriceListRentCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/PriceListRents/DeletePriceListRent/{id}": {
      "delete": {
        "tags": [
          "PriceListRents"
        ],
        "operationId": "DeletePriceListRent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/TransactionDetailBuy/GetTransactionDetailBuy": {
      "get": {
        "tags": [
          "TransactionDetailBuy"
        ],
        "operationId": "GetTransactionDetailBuy",
        "parameters": [
          {
            "name": "ParameterUserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ParameterTransactionNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SortDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 3
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfTransactionDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionDetailBuy/CreateTransactionDetailBuy": {
      "post": {
        "tags": [
          "TransactionDetailBuy"
        ],
        "operationId": "CreateTransactionDetailBuy",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDetailBuyCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionDetailBuy/UpdateTransactionDetailBuy/{id}": {
      "put": {
        "tags": [
          "TransactionDetailBuy"
        ],
        "operationId": "UpdateTransactionDetailBuy",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusTransactionCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionDetailBuy/DeleteTransactionDetailBuy/{id}": {
      "delete": {
        "tags": [
          "TransactionDetailBuy"
        ],
        "operationId": "DeleteTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionDetailRents/GetTransactionDetailRent": {
      "get": {
        "tags": [
          "TransactionDetailRents"
        ],
        "operationId": "GetTransactionRent",
        "parameters": [
          {
            "name": "ParameterUserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ParameterTransactionNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "SortDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 3
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfTransactionDTO2"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionDetailRents/CreateTransactionDetailRent": {
      "post": {
        "tags": [
          "TransactionDetailRents"
        ],
        "operationId": "CreateTransactionDetailRent",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDetailRentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionDetailRents/UpdateTransactionDetailRent/{id}": {
      "put": {
        "tags": [
          "TransactionDetailRents"
        ],
        "operationId": "UpdateTransactionDetailRent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusTransactionCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionDetailRents/DeleteTransactionDetailRent/{id}": {
      "delete": {
        "tags": [
          "TransactionDetailRents"
        ],
        "operationId": "DeleteTransactionDetailRent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionOnGoing/GetTransactionOnGoing": {
      "get": {
        "tags": [
          "TransactionOnGoing"
        ],
        "operationId": "GetTransactionOnGoing",
        "parameters": [
          {
            "name": "ParameterUserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "ParameterTransactionNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "ParameterStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "SortDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 4
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfTransactionOnGoingDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionOnGoing/UpdateTransactionOnGoing/{id}": {
      "put": {
        "tags": [
          "TransactionOnGoing"
        ],
        "operationId": "UpdatePaymentConfirmationReceiptTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentConfirmationReceiptTransactionCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionReport/GetTransactionReport": {
      "get": {
        "tags": [
          "TransactionReport"
        ],
        "operationId": "GetTransactionReport",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionReportDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionReport/GetUserTransactionType": {
      "get": {
        "tags": [
          "TransactionReport"
        ],
        "operationId": "GetUserTransactionType",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserTransactionTypeDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionReport/GetSummaryTransactionStatus": {
      "get": {
        "tags": [
          "TransactionReport"
        ],
        "operationId": "GetSummaryTransactionStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SummaryTransactionStatusDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionReport/GetReportCard": {
      "get": {
        "tags": [
          "TransactionReport"
        ],
        "operationId": "GetReportCard",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportCardDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TransactionReport/GetUnitRemaining": {
      "get": {
        "tags": [
          "TransactionReport"
        ],
        "operationId": "GetUnitRemaining",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitRemainingVm"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRegister",
        "requestBody": {
          "x-name": "registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersLogin",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/refresh": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersRefresh",
        "requestBody": {
          "x-name": "refreshRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/confirmEmail": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersConfirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "changedEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/resendConfirmationEmail": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResendConfirmationEmail",
        "requestBody": {
          "x-name": "resendRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendConfirmationEmailRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/forgotPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersForgotPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/resetPassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersResetPassword",
        "requestBody": {
          "x-name": "resetRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/manage/2fa": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManage2fa",
        "requestBody": {
          "x-name": "tfaRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFactorRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFactorResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Users/manage/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetApiUsersManageInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "PostApiUsersManageInfo",
        "requestBody": {
          "x-name": "infoRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InfoRequest"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserEntitys/GetUserEntity": {
      "get": {
        "tags": [
          "UserEntitys"
        ],
        "operationId": "GetAllUserEntity",
        "parameters": [
          {
            "name": "ParameterName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "SortUserName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          },
          {
            "name": "PageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfUserEntityDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserEntitys/CreateAdmin": {
      "post": {
        "tags": [
          "UserEntitys"
        ],
        "operationId": "CreateNewAdmin",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserEntitys/DeleteAdmin/{id}": {
      "delete": {
        "tags": [
          "UserEntitys"
        ],
        "operationId": "DeleteAdmin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserEntitys/UpdateUserEntity/{id}": {
      "put": {
        "tags": [
          "UserEntitys"
        ],
        "operationId": "UpdateUserEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserEntityCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserEntitys/DeleteUserEntity/{id}": {
      "delete": {
        "tags": [
          "UserEntitys"
        ],
        "operationId": "DeleteUserEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/WeatherForecasts": {
      "get": {
        "tags": [
          "WeatherForecasts"
        ],
        "operationId": "GetWeatherForecasts",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaginatedListOfHeavyUnitDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeavyUnitDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "HeavyUnitDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "nameUnit": {
            "type": "string",
            "nullable": true
          },
          "typeUnit": {
            "type": "string",
            "nullable": true
          },
          "descUnit": {
            "type": "string",
            "nullable": true
          },
          "imgUnit": {
            "type": "string",
            "nullable": true
          },
          "imgBrand": {
            "type": "string",
            "nullable": true
          },
          "priceBuyUnit": {
            "type": "number",
            "format": "decimal"
          },
          "priceRentUnit": {
            "type": "number",
            "format": "decimal"
          },
          "qtyUnit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateHeavyUnitCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nameUnit": {
            "type": "string",
            "nullable": true
          },
          "typeUnit": {
            "type": "string",
            "nullable": true
          },
          "descUnit": {
            "type": "string",
            "nullable": true
          },
          "imgUnit": {
            "type": "string",
            "nullable": true
          },
          "imgBrand": {
            "type": "string",
            "nullable": true
          },
          "priceBuyUnit": {
            "type": "number",
            "format": "decimal"
          },
          "priceRentUnit": {
            "type": "number",
            "format": "decimal"
          },
          "qtyUnit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateHeavyUnitCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "nameUnit": {
            "type": "string",
            "nullable": true
          },
          "typeUnit": {
            "type": "string",
            "nullable": true
          },
          "descUnit": {
            "type": "string",
            "nullable": true
          },
          "imgUnit": {
            "type": "string",
            "nullable": true
          },
          "imgBrand": {
            "type": "string",
            "nullable": true
          },
          "priceBuyUnit": {
            "type": "number",
            "format": "decimal"
          },
          "priceRentUnit": {
            "type": "number",
            "format": "decimal"
          },
          "qtyUnit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RegisterUserEntityCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "companyUser": {
            "type": "string"
          },
          "positionUser": {
            "type": "string"
          }
        }
      },
      "LoginUserEntityCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "PaginatedListOfPriceListRentDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceListRentDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "PriceListRentDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "nameRent": {
            "type": "string",
            "nullable": true
          },
          "priceRentUnit": {
            "type": "number",
            "format": "decimal"
          },
          "months": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreatePriceListRentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nameRent": {
            "type": "string",
            "nullable": true
          },
          "priceRentUnit": {
            "type": "number",
            "format": "decimal"
          },
          "months": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdatePriceListRentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "nameRent": {
            "type": "string",
            "nullable": true
          },
          "priceRentUnit": {
            "type": "number",
            "format": "decimal"
          },
          "months": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaginatedListOfTransactionDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "TransactionDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "transactionNum": {
            "type": "string",
            "nullable": true
          },
          "nameUnit": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "priceBuyUnit": {
            "type": "number",
            "format": "decimal"
          },
          "receiverName": {
            "type": "string",
            "nullable": true
          },
          "receiverHp": {
            "type": "string",
            "nullable": true
          },
          "receiverAddress": {
            "type": "string",
            "nullable": true
          },
          "qtyTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "totalPriceTransaction": {
            "type": "number",
            "format": "decimal"
          },
          "dateTransaction": {
            "type": "string",
            "format": "date"
          },
          "statusTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "dateBuy": {
            "type": "string",
            "format": "date"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateTransactionDetailBuyCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unitId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "receiverName": {
            "type": "string"
          },
          "receiverHp": {
            "type": "string"
          },
          "receiverAddress": {
            "type": "string"
          },
          "qtyTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "dateTransaction": {
            "type": "string",
            "format": "date"
          },
          "statusTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "transactionDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "UpdateStatusTransactionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "statusTransaction": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaginatedListOfTransactionDTO2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDTO2"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "TransactionDTO2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "transactionNum": {
            "type": "string",
            "nullable": true
          },
          "nameUnit": {
            "type": "string",
            "nullable": true
          },
          "typeUnit": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "priceRentUnit": {
            "type": "number",
            "format": "decimal"
          },
          "receiverName": {
            "type": "string",
            "nullable": true
          },
          "receiverHp": {
            "type": "string",
            "nullable": true
          },
          "receiverAddress": {
            "type": "string",
            "nullable": true
          },
          "qtyTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "months": {
            "type": "integer",
            "format": "int32"
          },
          "totalPriceTransaction": {
            "type": "number",
            "format": "decimal"
          },
          "dateTransaction": {
            "type": "string",
            "format": "date"
          },
          "statusTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "dateRent": {
            "type": "string",
            "format": "date"
          },
          "dateReturn": {
            "type": "string",
            "format": "date"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateTransactionDetailRentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unitId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "priceListRentId": {
            "type": "string"
          },
          "receiverName": {
            "type": "string"
          },
          "receiverHp": {
            "type": "string"
          },
          "receiverAddress": {
            "type": "string"
          },
          "qtyTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "dateTransaction": {
            "type": "string",
            "format": "date"
          },
          "statusTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "dateRent": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "PaginatedListOfTransactionOnGoingDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionOnGoingDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "TransactionOnGoingDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "transactionNum": {
            "type": "string",
            "nullable": true
          },
          "nameUnit": {
            "type": "string",
            "nullable": true
          },
          "typeUnit": {
            "type": "string",
            "nullable": true
          },
          "imgUnit": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "receiverName": {
            "type": "string",
            "nullable": true
          },
          "receiverHp": {
            "type": "string",
            "nullable": true
          },
          "receiverAddress": {
            "type": "string",
            "nullable": true
          },
          "qtyTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "months": {
            "type": "integer",
            "format": "int32"
          },
          "totalPriceTransaction": {
            "type": "number",
            "format": "decimal"
          },
          "paymentConfirmationReceipt": {
            "type": "string",
            "nullable": true
          },
          "dateTransaction": {
            "type": "string",
            "format": "date"
          },
          "statusTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "isBuy": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "dateRent": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dateReturn": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "UpdatePaymentConfirmationReceiptTransactionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "paymentConfirmationReceiptTransaction": {
            "type": "string"
          }
        }
      },
      "TransactionReportDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "monthTransaction": {
            "type": "integer",
            "format": "int32"
          },
          "transaksiSewa": {
            "type": "integer",
            "format": "int32"
          },
          "transaksiBeli": {
            "type": "integer",
            "format": "int32"
          },
          "transaksi": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserTransactionTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userCount": {
            "type": "integer",
            "format": "int32"
          },
          "buyCount": {
            "type": "integer",
            "format": "int32"
          },
          "rentCount": {
            "type": "integer",
            "format": "int32"
          },
          "bothCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SummaryTransactionStatusDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactionRejected": {
            "type": "integer",
            "format": "int32"
          },
          "transactionOnGoing": {
            "type": "integer",
            "format": "int32"
          },
          "transactionPaid": {
            "type": "integer",
            "format": "int32"
          },
          "transactionFinish": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ReportCardDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "buyTransactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "rentTransactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "unitCount": {
            "type": "integer",
            "format": "int32"
          },
          "userCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UnitRemainingVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitRemainingDto"
            }
          }
        }
      },
      "UnitRemainingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unitRented": {
            "type": "integer",
            "format": "int32"
          },
          "unitBuyed": {
            "type": "integer",
            "format": "int32"
          },
          "unitFree": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AccessTokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "twoFactorRecoveryCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ResendConfirmationEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "resetCode": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "TwoFactorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sharedKey": {
            "type": "string"
          },
          "recoveryCodesLeft": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isMachineRemembered": {
            "type": "boolean"
          }
        }
      },
      "TwoFactorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enable": {
            "type": "boolean",
            "nullable": true
          },
          "twoFactorCode": {
            "type": "string",
            "nullable": true
          },
          "resetSharedKey": {
            "type": "boolean"
          },
          "resetRecoveryCodes": {
            "type": "boolean"
          },
          "forgetMachine": {
            "type": "boolean"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "isEmailConfirmed": {
            "type": "boolean"
          }
        }
      },
      "InfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "oldPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedListOfUserEntityDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEntityDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "UserEntityDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyUser": {
            "type": "string",
            "nullable": true
          },
          "positionUser": {
            "type": "string",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          }
        }
      },
      "UpdateUserEntityCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyUser": {
            "type": "string",
            "nullable": true
          },
          "positionUser": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}